Remove Linked List Elements 1
Problem
Submissions
Leaderboard
Discussions
Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.
Input Format

The first line of each test case or query contains the elements of the singly linked list separated by a single space.
Remember/Consider :
While specifying the list elements for input, -1 indicates the end of the singly linked list and hence, would never be a list element.

Second line target value

Constraints

Time:- 1 Sec
Output Format

Remove all occurences of that target
Sample Input 0

1 2 6 3 4 5 6 -1
6
Sample Output 0

1 2 3 4 5
Sample Input 1

1 7 7 7 7 7 -1
7
Sample Output 1

1


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


import java.io.*;
import java.util.*;
class node 
{
    int data;
    node next;
    node(int val) 
    {
        data = val;
        next = null;
    }
}
public class Main 
{
    node head;
    void insertinend(int ele) 
    {
        node newnode = new node(ele);
        if (head == null) 
        {
            head = newnode;
        } 
        else 
        {
            node t = head;
            while (t.next != null)
            {
                t = t.next;
            }
            t.next = newnode;
        }
    }
    void removeElements(int k) 
    {
        node dummy = new node(0);
        dummy.next = head;
        node current = dummy;
        while (current.next != null) 
        {
            if (current.next.data == k) 
            {
                current.next = current.next.next;
            } 
            else 
            {
                current = current.next;
            }
        }
        head = dummy.next;
    }
    void display() 
    {
        node temp = head;
        if (head == null)
        {
            System.out.println("Linked list is empty");
        } 
        else 
        {
            while (temp != null)
            {
                System.out.print(temp.data + " ");
                temp = temp.next;
            }
            System.out.println();
        }
    }
    public static void main(String args[]) 
    {
        Scanner sc = new Scanner(System.in);
        Main l1 = new Main();
        while (true) 
        {
            int value = sc.nextInt();
            if (value == -1) 
            {
                break;
            }
            l1.insertinend(value);
        }
        int k = sc.nextInt();
        l1.removeElements(k);
        l1.display();
    }
}
